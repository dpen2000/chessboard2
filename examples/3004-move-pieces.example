===== id
3004-move-pieces

===== Name
Move Pieces

===== DescriptionMD

Use the [.move()] method to make one or more moves on the board.

[.move()]:docs.html#methods:move

===== HTML
<div id="myBoard" style="width: 400px"></div>
<button id="move1Btn">e2-e4</button>
<button id="move2Btn">d2-d4, g8-f6</button>
<button id="move3Btn">Animation Speed</button>
<button id="disableAnimationsBtn">Disable animations with 'false'</button>
<button id="moveWithCallbackBtn">.move() with callback function</button>
<button id="move6Btn">.move() with config object</button>
<button id="move7Btn">Single Move returns a Promise Object</button>
<button id="move8Btn">Multiple Moves returns an Array of Promises</button>
<!-- <button id="move9Btn">Move 9</button> -->
<button id="move10Btn">Combine Instant and Animated Moves</button>
<button id="startPositionBtn">Start Position</button>

===== JS
const board = Chessboard2('myBoard', 'start')

attachEvent('move1Btn', 'click', () => {
  board.move('e2-e4')
})

attachEvent('move2Btn', 'click', () => {
  // pass multiple moves as arguments
  board.move('d2-d4', 'g8-f6')
})

attachEvent('move3Btn', 'click', () => {
  // you can pass a duration time to the .move() function
  // duration times are either in milliseconds or the following strings:
  // "super fast" - 40ms
  // "fast" - 80ms
  // "slow" - 300ms
  // "super slow" - 800ms
  board.move('a2-a7', 'slow')
  board.move('b2-b7', 5000)
})

attachEvent('disableAnimationsBtn', 'click', () => {
  // pass in false to disable animations
  board.move('d7-d5', false)
})

attachEvent('moveWithCallbackBtn', 'click', () => {
  // pass a callback function that will fire when the animation of the move is complete
  board.move('g1-f3', function (move) {
    console.log('Animation finished for g1-f3:')
    console.log(move)
  })
})

attachEvent('move6Btn', 'click', () => {
  // pass a config object
  board.move({
    animate: true,
    animateSpeed: 1000,
    from: 'g2',
    onComplete: (m) => { console.log('Move complete:', m) },
    to: 'g4'
  })
})

attachEvent('move7Btn', 'click', () => {
  // move() returns a Promise object that fires when the animation has completed
  board.move('c7-c5').then((move) => {
    console.log('Animation has completed. Here is information about the move:')
    console.log(move)
  })
})

attachEvent('move8Btn', 'click', () => {
  // multiple moves will return an Array of Promises
  Promise.all(board.move('h2-h4', 'h1-h3')).then((moves) => {
    console.log('Animations are complete:')
    console.log(moves)
  })
})

/*
FIXME FIXME FIXME - this does not work. Consider changing the API?
attachEvent('move9Btn', 'click', () => {
  // the Promise object will reject if the move is invalid / not possible
  board.move('g6-f6').then((move) => {
    console.log('Animation has completed. Here is information about the move:')
    console.log(move)
  }).catch((err) => {
    console.log('Invalid move:')
    console.log(err)
  })
})
*/

attachEvent('move10Btn', 'click', () => {
  // you may combine instant and animated moves in the same .move() call
  board.move({
    animate: true,
    animateSpeed: 'superslow',
    from: 'g7',
    to: 'g4'
  },
  {
    animate: false,
    from: 'f7',
    to: 'f4'
  })
})

attachEvent('startPositionBtn', 'click', () => {
  board.start()
})
